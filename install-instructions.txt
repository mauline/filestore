Installation overview
=====================

What you need is a SSL enabled web server on a linux box with PHP installed.
The web server must have a local MTA running that is able to send e-mail to
your users.

The following assumes that an apache server is available that does already
host the https://www.example.com/ web pages.


Short introduction: How FileStore works
---------------------------------------

FileStore allows you to upload files. To protect them so they aren't available
to anyone, a random URL is generated. Anybody knowing the secret URL is able
to download the file.

FileStore allows others to upload files for you. For this, you have to
generate an upload URL. Again, this URL is random. Anybody knowing the secret
URL can upload a file for you. The uploaded file is stored using another
random URL and you will be notified by e-mail.

All random URLs live in a directory named "data" below the filestore webspace.



Configure the web server
------------------------

FileStore can use either a separate web space or a subdirectory of existing
web space. So in the case above, we could use

        https://filestore.example.com/

(which needs a separate DNS entry and more setup), or

        https://www.example.com/filestore/

which is easier to setup. We will use the latter one for this guide.

So what we need to do is to

1.
Restrict access to https://www.example.com/filestore/ to your users. Everybody
with access to this URL can upload files or generate upload pages for others.

2.
Make sure, https://www.example.com/filestore/data/ is not browsable, but that
files below this directory can be accessed if the concrete URL is known.

Let's go:

First, create a subdirectory "filestore" in the document root for
www.example.com.

Next, configure access to this directory and the ones below:

    # Filestore configuration
    <Directory "/path/to/www.example.com/filestore">
        # Allow access only via ssl
        SSLRequireSSL

        # Disallow access to php include files
        <Files ~ "\.inc$">
            Require all denied
        </Files>

        # Don't generate a directory listing
        Options -Indexes

        # Configure PHP upload stuff
        php_value session.gc_maxlifetime 7200
        php_value max_input_time         7200
        php_value max_execution_time     7200
        php_value upload_max_filesize    1024M
        php_value post_max_size          1024M

        # Configure authentication
        AuthType Basic
        AuthName "Restricted upload area"
        AuthUserFile /path/to/www.example.com/filestore/.htpasswd

        # Allow access from local network
        <RequireAny>
            Require ip aa.bb.cc.dd/24
            Require valid-user
        </RequireAny>
    </Directory>
    <Directory "/path/to/www.example.com/filestore/data">
        # No .htaccess files
        AllowOverride None

        # Allow access to anybody
        Require all granted
    </Directory>
    <Directory "/path/to/www.example.com/filestore/upload-templates">
        # No access
        Require all denied
    </Directory>
    <Directory "/path/to/www.example.com/filestore/po">
        # Not strictly necessary, but anyway: no access
        Require all denied
    </Directory>

The configuration above gives anybody in the network aa.bb.cc.dd/24 direct
access to the filestore without authentication. Use this, if aa.bb.cc.dd/24 is
your company network that has access to the web server. Otherwise remove it.

In addition, users added to the /path/to/www.example.com/filestore/.htpasswd
file have access to the filestore if they supply a proper password. Use this
if your users access the filestore from arbitrary ip addresses. Otherwise
remove it or just don't generate the .htaccess file.

You may also adjust the maximum upload size.

Reload the web server and check that above configuration is actually working.


Populate the web space
----------------------

Edit the install script as needed, have a quick glance at the actions taken,
then execute it as root.

Change directory to the document root of the filestore.

Open "filestore.inc" with an editor and adjust the variables $AllowedExts,
$MailSender and $AllowedMailDomains to your liking. I would advise against
allowing executables and anything that could harm Window users, but from a
technical standpoint there's nothing that prevents you from doing exactly
that. Make sure the mail domains are accepted by your MTA.


Configure cleanup
-----------------

Edit the cleanup-filestore script to suit your needs, then copy it to
/etc/cron.daily.


That's it!
----------

Test the setup. Check up- and downloads. Check that the access restrictions
work as expected.


Optional steps
--------------

Header/footer of the web pages are generated by functions in the file
layout.inc. You can customize this file if you like to.

If the FileStore is used heavily, you might want to mount a separate volume
below "data", so your users won't fill up system volumes.


If it doesn't work
------------------

If you cannot even load the main page and get an error from your browser:

Make sure the web server is actually running and accessible via network.
Check the web server setup and error logs.
Temporarily remove the index.php file and add a file index.html with the
following content:

    <html>
    <head><title>It works.</title></head>
    <body><h1>It works.</h1></body>
    </html>

If this works, the problem is in your web server setup regarding php. Make
sure, your web server can serve php pages.

If the main page loads but is empty:

Check your web server error logs. There might be a problem with your PHP setup
so the pages are read but have errors when parsed.

If the pages load, but don't react on button clicks:

There might be a problem with the embedded javascript. Open the browsers page
inspector (right click -> Inspect element in Firefox) and check for javascript
errors.

If the pages load in the wrong language:

Provided that your browser requests pages in a supported language (currently
english and german), the php gettext module on the server may be disabled. Add

    extension=gettext.so

to your /etc/php.ini file or check how to enable gettext for php in the
distribution of your choice.

If the upload page doesn't accept your e-mail address:

You will have to configure allowed e-mail addresses in the filestore.inc file
in your document root. The upload pages are sent via e-mail to make sure the
e-mail address is correct. Otherwise the notification that is sent when
someone uploads a file wouldn't get delivered.

